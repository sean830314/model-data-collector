apiVersion: apps/v1
kind: Deployment
metadata:
  name: fluentd-aggregator-deployment
  namespace: default
  labels:
    app: fluentd-aggregator
spec:
  selector:
    matchLabels:
      app: fluentd-aggregator
  replicas: 1
  template:
    metadata:
      labels:
        app: fluentd-aggregator
    spec:
      containers:
      - name: fluentd
        image: fluent/fluentd:v1.13.0-1.0
        ports:
        - containerPort: 24224
          name: tcp
        securityContext:
          runAsUser: 0
        command: ["/bin/sh"]
        args:
          - -c
          - |
            apk add --no-cache bash make gcc libc-dev ruby-dev
            gem install fluent-plugin-mongo
            gem install fluent-plugin-redis-store
            gem install fluent-plugin-elasticsearch
            apk del make gcc libc-dev ruby-dev
            mkdir -p /var/log/test
            fluentd
        volumeMounts:
        - name: fluentd-config-volume
          mountPath: /fluentd/etc/fluent.conf
          subPath: server_fluentd-aggregator.conf
          readOnly: true
        volumeMounts:
        - name: fluentd-config
          mountPath: "/etc/fluent/fluent.conf"
          subPath: path/to
          readOnly: true
        livenessProbe:
          tcpSocket:
            port: tcp
          periodSeconds: 30
        startupProbe:
          tcpSocket:
            port: tcp
          failureThreshold: 30
          periodSeconds: 10
      volumes:
      - name: fluentd-config-volume
        configMap:
          name: fluentd-aggregator-config

---
apiVersion: v1
kind: Service
metadata:
  name: fluentd-aggregator-service
  namespace: default
spec:
  ports:
  - name: tcp
    port: 24224
    protocol: TCP
    targetPort: 24224
  selector:
    app: fluentd-aggregator

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-aggregator-config
  namespace: default
data:
  server_fluentd-agent.conf: |
    <source>
      @type forward
      port 24224
      bind 0.0.0.0
    </source>

    <match fluent.info>
      @type stdout
    </match>

    <filter model.*>
      @type            elasticsearch_genid
      hash_id_key      _hash    # storing generated hash id key (default is _hash)
    </filter>

    # save model log result to elasticsearch
    <match model.*>
      @type copy
      <store>
        @type stdout
      </store>
      <store>
        @type elasticsearch
        host <host>
        port <port>
        # user <user>
        # password <password>
        # scheme https
        # ssl_verify false
        id_key             _hash # specify same key name which is specified in hash_id_key
        remove_keys        _hash # Elasticsearch doesn't like keys that start with _
        logstash_format true
        logstash_prefix fluentd-${tag}
        include_tag_key true
        time_key log_time
        type_name _doc
        request_timeout    30s
        slow_flush_log_threshold 30s
        <buffer>
          @type            file
          path             "/var/log/test/buffer"
          total_limit_size 1G
          chunk_limit_size 15M
          flush_interval   20s
          retry_wait       10.0
        </buffer>
      </store>
    </match>

    # save azure entity result to redis and mongodb
    <match azure.ner>
      @type copy
      <store>
        @type stdout
      </store>
      <store>
        @type mongo
        host mongodb
        port 27017
        database fluentd_ai
        collection ner_collection
        <inject>
        time_key time
        </inject>
        <buffer>
          flush_interval 20s
        </buffer>
      </store>
      <store>
        @type redis_store
        host redis
        port 6379
        db 1
        key_path data.name
        key_expire 1209600
        <buffer>
          flush_interval 20s
        </buffer>
      </store>
    </match>


